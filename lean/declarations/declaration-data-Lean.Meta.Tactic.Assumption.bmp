{"name":"Lean.Meta.Tactic.Assumption","instances":[],"imports":["Init","Lean.Meta.Tactic.Util"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/ebc32af2e606deef0d7b437e67f24c20ed866818/src/Lean/Meta/Tactic/Assumption.lean#L38-L39","name":"Lean.Meta.assumption","kind":"def","docLink":"./Lean/Meta/Tactic/Assumption.html#Lean.Meta.assumption","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/ebc32af2e606deef0d7b437e67f24c20ed866818/src/Lean/Meta/Tactic/Assumption.lean#L33-L35","name":"Lean.MVarId.assumption","kind":"def","docLink":"./Lean/Meta/Tactic/Assumption.html#Lean.MVarId.assumption","doc":"Close goal `mvarId` using an assumption. Throw error message if failed. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/ebc32af2e606deef0d7b437e67f24c20ed866818/src/Lean/Meta/Tactic/Assumption.lean#L29-L30","name":"Lean.Meta.assumptionCore","kind":"def","docLink":"./Lean/Meta/Tactic/Assumption.html#Lean.Meta.assumptionCore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/ebc32af2e606deef0d7b437e67f24c20ed866818/src/Lean/Meta/Tactic/Assumption.lean#L21-L26","name":"Lean.MVarId.assumptionCore","kind":"def","docLink":"./Lean/Meta/Tactic/Assumption.html#Lean.MVarId.assumptionCore","doc":"Return `true` if managed to close goal `mvarId` using an assumption. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/ebc32af2e606deef0d7b437e67f24c20ed866818/src/Lean/Meta/Tactic/Assumption.lean#L11-L18","name":"Lean.Meta.findLocalDeclWithType?","kind":"def","docLink":"./Lean/Meta/Tactic/Assumption.html#Lean.Meta.findLocalDeclWithType?","doc":"Return a local declaration whose type is definitionally equal to `type`. "}]}