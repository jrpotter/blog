{"name":"Lean.Compiler.LCNF.Simp.Basic","instances":[],"imports":["Init","Lean.Meta.Instances","Lean.Compiler.InlineAttrs","Lean.Compiler.Specialize","Lean.Compiler.LCNF.CompilerM"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/9ec9ea61a4ebbcd2672b8905e7c583958113e24e/src/Lean/Compiler/LCNF/Simp/Basic.lean#L23-L29","name":"Lean.Compiler.LCNF.Simp.findFunDecl'?","kind":"opaque","docLink":"./Lean/Compiler/LCNF/Simp/Basic.html#Lean.Compiler.LCNF.Simp.findFunDecl'?","doc":"Similar to `findFunDecl?`, but follows aliases (i.e., `let _x.i := _x.j`).\nConsider the following example\n```\nfun _f.1 ... := ...\nlet _x.2 := _f.1\n```\n`findFunDecl? _x.2` returns `none`, but `findFunDecl'? _x.2` returns the declaration for `_f.1`.\n"}]}