{"name":"Lean.Meta.Tactic.Constructor","instances":[],"imports":["Init","Lean.Meta.Check","Lean.Meta.Tactic.Util","Lean.Meta.Tactic.Apply"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/445fd417be4df8f69f1b97b5426bd5ef97d28138/src/Lean/Meta/Tactic/Constructor.lean#L53-L54","name":"Lean.Meta.existsIntro","kind":"def","docLink":"./Lean/Meta/Tactic/Constructor.html#Lean.Meta.existsIntro","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/445fd417be4df8f69f1b97b5426bd5ef97d28138/src/Lean/Meta/Tactic/Constructor.lean#L34-L50","name":"Lean.MVarId.existsIntro","kind":"def","docLink":"./Lean/Meta/Tactic/Constructor.html#Lean.MVarId.existsIntro","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/445fd417be4df8f69f1b97b5426bd5ef97d28138/src/Lean/Meta/Tactic/Constructor.lean#L31-L32","name":"Lean.Meta.constructor","kind":"def","docLink":"./Lean/Meta/Tactic/Constructor.html#Lean.Meta.constructor","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/445fd417be4df8f69f1b97b5426bd5ef97d28138/src/Lean/Meta/Tactic/Constructor.lean#L16-L28","name":"Lean.MVarId.constructor","kind":"def","docLink":"./Lean/Meta/Tactic/Constructor.html#Lean.MVarId.constructor","doc":"When the goal `mvarId` type is an inductive datatype,\n`constructor` calls `apply` with the first matching constructor.\n"}]}