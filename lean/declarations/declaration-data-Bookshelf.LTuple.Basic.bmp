{"name":"Bookshelf.LTuple.Basic","instances":[{"typeNames":["Eq","LTuple"],"name":"LTuple.instDecidableEqLTuple","className":"Decidable"}],"imports":["Init","Mathlib.Tactic.Ring"],"declarations":[{"sourceLink":"https://github.com/jrpotter/bookshelf/blob/b8ea0ae7ad8661f8daddb40efb3e1a0915b6b722/Bookshelf/LTuple/Basic.lean#L263-L275","name":"LTuple.eq_take_concat","kind":"theorem","docLink":"./Bookshelf/LTuple/Basic.html#LTuple.eq_take_concat","doc":"Given an `LTuple` of size `k`, concatenating an arbitrary `LTuple` and taking\n`k` elements yields the original `LTuple`.\n"},{"sourceLink":"https://github.com/jrpotter/bookshelf/blob/b8ea0ae7ad8661f8daddb40efb3e1a0915b6b722/Bookshelf/LTuple/Basic.lean#L254-L257","name":"LTuple.eq_tuple_eq_take","kind":"theorem","docLink":"./Bookshelf/LTuple/Basic.html#LTuple.eq_tuple_eq_take","doc":"If two `LTuple`s are equal, then any initial sequences of these two `LTuple`s\nare also equal.\n"},{"sourceLink":"https://github.com/jrpotter/bookshelf/blob/b8ea0ae7ad8661f8daddb40efb3e1a0915b6b722/Bookshelf/LTuple/Basic.lean#L242-L248","name":"LTuple.init_eq_take_pred","kind":"theorem","docLink":"./Bookshelf/LTuple/Basic.html#LTuple.init_eq_take_pred","doc":"Taking `n` elements from an `LTuple` of size `n + 1` is the same as invoking\n`init`.\n"},{"sourceLink":"https://github.com/jrpotter/bookshelf/blob/b8ea0ae7ad8661f8daddb40efb3e1a0915b6b722/Bookshelf/LTuple/Basic.lean#L233-L236","name":"LTuple.take_subst_last","kind":"theorem","docLink":"./Bookshelf/LTuple/Basic.html#LTuple.take_subst_last","doc":"Taking `n - 1` elements from an `LTuple` of size `n` yields the same result,\nregardless of the last entry's value.\n"},{"sourceLink":"https://github.com/jrpotter/bookshelf/blob/b8ea0ae7ad8661f8daddb40efb3e1a0915b6b722/Bookshelf/LTuple/Basic.lean#L224-L227","name":"LTuple.self_take_size_eq_self","kind":"theorem","docLink":"./Bookshelf/LTuple/Basic.html#LTuple.self_take_size_eq_self","doc":"Taking `n` entries from an `LTuple` of size `n` should yield the same `LTuple`.\n"},{"sourceLink":"https://github.com/jrpotter/bookshelf/blob/b8ea0ae7ad8661f8daddb40efb3e1a0915b6b722/Bookshelf/LTuple/Basic.lean#L218-L219","name":"LTuple.nil_take_zero_eq_nil","kind":"theorem","docLink":"./Bookshelf/LTuple/Basic.html#LTuple.nil_take_zero_eq_nil","doc":"Taking any number of entries from an empty `LTuple` should yield an empty\n`LTuple`.\n"},{"sourceLink":"https://github.com/jrpotter/bookshelf/blob/b8ea0ae7ad8661f8daddb40efb3e1a0915b6b722/Bookshelf/LTuple/Basic.lean#L209-L212","name":"LTuple.self_take_zero_eq_nil","kind":"theorem","docLink":"./Bookshelf/LTuple/Basic.html#LTuple.self_take_zero_eq_nil","doc":"Taking no entries from any `LTuple` should yield an empty `LTuple`.\n"},{"sourceLink":"https://github.com/jrpotter/bookshelf/blob/b8ea0ae7ad8661f8daddb40efb3e1a0915b6b722/Bookshelf/LTuple/Basic.lean#L201-L204","name":"LTuple.take.min_lt_succ_eq","kind":"theorem","docLink":"./Bookshelf/LTuple/Basic.html#LTuple.take.min_lt_succ_eq","doc":""},{"sourceLink":"https://github.com/jrpotter/bookshelf/blob/b8ea0ae7ad8661f8daddb40efb3e1a0915b6b722/Bookshelf/LTuple/Basic.lean#L193-L204","name":"LTuple.take","kind":"def","docLink":"./Bookshelf/LTuple/Basic.html#LTuple.take","doc":"Takes the first `k` entries from an `LTuple` to form a new `LTuple`, or the\nentire `LTuple` if `k` exceeds the size.\n"},{"sourceLink":"https://github.com/jrpotter/bookshelf/blob/b8ea0ae7ad8661f8daddb40efb3e1a0915b6b722/Bookshelf/LTuple/Basic.lean#L181-L185","name":"LTuple.snoc_eq_init_concat_last","kind":"theorem","docLink":"./Bookshelf/LTuple/Basic.html#LTuple.snoc_eq_init_concat_last","doc":"`snoc` is equivalent to concatenating the `init` and `last` elements of an\n`LTuple` together.\n"},{"sourceLink":"https://github.com/jrpotter/bookshelf/blob/b8ea0ae7ad8661f8daddb40efb3e1a0915b6b722/Bookshelf/LTuple/Basic.lean#L173-L175","name":"LTuple.concat_snoc_snoc_concat","kind":"theorem","docLink":"./Bookshelf/LTuple/Basic.html#LTuple.concat_snoc_snoc_concat","doc":"Concatenating an `LTuple` to a nonempty `LTuple` moves `concat` calls closer to\nthe expression leaves.\n"},{"sourceLink":"https://github.com/jrpotter/bookshelf/blob/b8ea0ae7ad8661f8daddb40efb3e1a0915b6b722/Bookshelf/LTuple/Basic.lean#L148-L167","name":"LTuple.nil_concat_self_eq_self","kind":"theorem","docLink":"./Bookshelf/LTuple/Basic.html#LTuple.nil_concat_self_eq_self","doc":"Concatenating `nil` with an `LTuple` yields the original `LTuple`.\n"},{"sourceLink":"https://github.com/jrpotter/bookshelf/blob/b8ea0ae7ad8661f8daddb40efb3e1a0915b6b722/Bookshelf/LTuple/Basic.lean#L140-L143","name":"LTuple.self_concat_nil_eq_self","kind":"theorem","docLink":"./Bookshelf/LTuple/Basic.html#LTuple.self_concat_nil_eq_self","doc":"Concatenating an `LTuple` with `nil` yields the original `LTuple`.\n"},{"sourceLink":"https://github.com/jrpotter/bookshelf/blob/b8ea0ae7ad8661f8daddb40efb3e1a0915b6b722/Bookshelf/LTuple/Basic.lean#L133-L135","name":"LTuple.concat","kind":"def","docLink":"./Bookshelf/LTuple/Basic.html#LTuple.concat","doc":"Joins two `LTuple`s together end to end.\n"},{"sourceLink":"https://github.com/jrpotter/bookshelf/blob/b8ea0ae7ad8661f8daddb40efb3e1a0915b6b722/Bookshelf/LTuple/Basic.lean#L124-L126","name":"LTuple.cons","kind":"def","docLink":"./Bookshelf/LTuple/Basic.html#LTuple.cons","doc":"Prepends an entry to an `LTuple`.\n"},{"sourceLink":"https://github.com/jrpotter/bookshelf/blob/b8ea0ae7ad8661f8daddb40efb3e1a0915b6b722/Bookshelf/LTuple/Basic.lean#L118-L119","name":"LTuple.last","kind":"def","docLink":"./Bookshelf/LTuple/Basic.html#LTuple.last","doc":"Returns the last entry of an `LTuple`.\n"},{"sourceLink":"https://github.com/jrpotter/bookshelf/blob/b8ea0ae7ad8661f8daddb40efb3e1a0915b6b722/Bookshelf/LTuple/Basic.lean#L112-L113","name":"LTuple.init","kind":"def","docLink":"./Bookshelf/LTuple/Basic.html#LTuple.init","doc":"Returns all but the last entry of an `LTuple`.\n"},{"sourceLink":"https://github.com/jrpotter/bookshelf/blob/b8ea0ae7ad8661f8daddb40efb3e1a0915b6b722/Bookshelf/LTuple/Basic.lean#L107-L107","name":"LTuple.size","kind":"def","docLink":"./Bookshelf/LTuple/Basic.html#LTuple.size","doc":"Returns the number of entries in an `LTuple`.\n"},{"sourceLink":"https://github.com/jrpotter/bookshelf/blob/b8ea0ae7ad8661f8daddb40efb3e1a0915b6b722/Bookshelf/LTuple/Basic.lean#L100-L100","name":"LTuple.instDecidableEqLTuple","kind":"instance","docLink":"./Bookshelf/LTuple/Basic.html#LTuple.instDecidableEqLTuple","doc":""},{"sourceLink":"https://github.com/jrpotter/bookshelf/blob/b8ea0ae7ad8661f8daddb40efb3e1a0915b6b722/Bookshelf/LTuple/Basic.lean#L87-L98","name":"LTuple.hasDecEq","kind":"def","docLink":"./Bookshelf/LTuple/Basic.html#LTuple.hasDecEq","doc":"Implements decidable equality for `Tuple Î± m`, provided `a` has decidable\nequality. \n"},{"sourceLink":"https://github.com/jrpotter/bookshelf/blob/b8ea0ae7ad8661f8daddb40efb3e1a0915b6b722/Bookshelf/LTuple/Basic.lean#L75-L81","name":"LTuple.eq_iff_snoc","kind":"theorem","docLink":"./Bookshelf/LTuple/Basic.html#LTuple.eq_iff_snoc","doc":"Two lists are equal **iff** their heads and tails are equal.\n"},{"sourceLink":"https://github.com/jrpotter/bookshelf/blob/b8ea0ae7ad8661f8daddb40efb3e1a0915b6b722/Bookshelf/LTuple/Basic.lean#L67-L70","name":"LTuple.eq_iff_singleton","kind":"theorem","docLink":"./Bookshelf/LTuple/Basic.html#LTuple.eq_iff_singleton","doc":"Two values `a` and `b` are equal **iff** `[a] = [b]`.\n"},{"sourceLink":"https://github.com/jrpotter/bookshelf/blob/b8ea0ae7ad8661f8daddb40efb3e1a0915b6b722/Bookshelf/LTuple/Basic.lean#L59-L60","name":"LTuple.instCoeLTupleMinNatInstMinNatHAddInstHAddInstAddNat","kind":"def","docLink":"./Bookshelf/LTuple/Basic.html#LTuple.instCoeLTupleMinNatInstMinNatHAddInstHAddInstAddNat","doc":""},{"sourceLink":"https://github.com/jrpotter/bookshelf/blob/b8ea0ae7ad8661f8daddb40efb3e1a0915b6b722/Bookshelf/LTuple/Basic.lean#L56-L57","name":"LTuple.instCoeLTupleHAddNatInstHAddInstAddNatMinInstMinNatOfNatInstOfNatNat","kind":"def","docLink":"./Bookshelf/LTuple/Basic.html#LTuple.instCoeLTupleHAddNatInstHAddInstAddNatMinInstMinNatOfNatInstOfNatNat","doc":""},{"sourceLink":"https://github.com/jrpotter/bookshelf/blob/b8ea0ae7ad8661f8daddb40efb3e1a0915b6b722/Bookshelf/LTuple/Basic.lean#L53-L54","name":"LTuple.instCoeLTupleHAddNatInstHAddInstAddNatOfNat","kind":"def","docLink":"./Bookshelf/LTuple/Basic.html#LTuple.instCoeLTupleHAddNatInstHAddInstAddNatOfNat","doc":""},{"sourceLink":"https://github.com/jrpotter/bookshelf/blob/b8ea0ae7ad8661f8daddb40efb3e1a0915b6b722/Bookshelf/LTuple/Basic.lean#L50-L51","name":"LTuple.instCoeLTupleMinNatInstMinNat","kind":"def","docLink":"./Bookshelf/LTuple/Basic.html#LTuple.instCoeLTupleMinNatInstMinNat","doc":""},{"sourceLink":"https://github.com/jrpotter/bookshelf/blob/b8ea0ae7ad8661f8daddb40efb3e1a0915b6b722/Bookshelf/LTuple/Basic.lean#L47-L48","name":"LTuple.instCoeLTupleOfNatNatInstOfNatNatMinInstMinNat_1","kind":"def","docLink":"./Bookshelf/LTuple/Basic.html#LTuple.instCoeLTupleOfNatNatInstOfNatNatMinInstMinNat_1","doc":""},{"sourceLink":"https://github.com/jrpotter/bookshelf/blob/b8ea0ae7ad8661f8daddb40efb3e1a0915b6b722/Bookshelf/LTuple/Basic.lean#L44-L45","name":"LTuple.instCoeLTupleOfNatNatInstOfNatNatMinInstMinNat","kind":"def","docLink":"./Bookshelf/LTuple/Basic.html#LTuple.instCoeLTupleOfNatNatInstOfNatNatMinInstMinNat","doc":""},{"sourceLink":"https://github.com/jrpotter/bookshelf/blob/b8ea0ae7ad8661f8daddb40efb3e1a0915b6b722/Bookshelf/LTuple/Basic.lean#L41-L42","name":"LTuple.instCoeOutLTupleMinNatInstMinNatHAddInstHAddInstAddNat","kind":"def","docLink":"./Bookshelf/LTuple/Basic.html#LTuple.instCoeOutLTupleMinNatInstMinNatHAddInstHAddInstAddNat","doc":""},{"sourceLink":"https://github.com/jrpotter/bookshelf/blob/b8ea0ae7ad8661f8daddb40efb3e1a0915b6b722/Bookshelf/LTuple/Basic.lean#L35-L35","name":"LTuple.snoc","kind":"ctor","docLink":"./Bookshelf/LTuple/Basic.html#LTuple.snoc","doc":""},{"sourceLink":"https://github.com/jrpotter/bookshelf/blob/b8ea0ae7ad8661f8daddb40efb3e1a0915b6b722/Bookshelf/LTuple/Basic.lean#L34-L34","name":"LTuple.nil","kind":"ctor","docLink":"./Bookshelf/LTuple/Basic.html#LTuple.nil","doc":""},{"sourceLink":"https://github.com/jrpotter/bookshelf/blob/b8ea0ae7ad8661f8daddb40efb3e1a0915b6b722/Bookshelf/LTuple/Basic.lean#L33-L35","name":"LTuple","kind":"inductive","docLink":"./Bookshelf/LTuple/Basic.html#LTuple","doc":"#### LTuple\n\nA left-biased, possibly empty, homogeneous `Tuple`-like structure..\n"}]}