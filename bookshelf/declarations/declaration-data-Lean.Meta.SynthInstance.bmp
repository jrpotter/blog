{"name":"Lean.Meta.SynthInstance","instances":[{"typeNames":["Lean.Meta.SynthInstance.Instance"],"name":"Lean.Meta.SynthInstance.instInhabitedInstance","className":"Inhabited"},{"typeNames":["Lean.Meta.SynthInstance.GeneratorNode"],"name":"Lean.Meta.SynthInstance.instInhabitedGeneratorNode","className":"Inhabited"},{"typeNames":["Lean.Meta.SynthInstance.ConsumerNode"],"name":"Lean.Meta.SynthInstance.instInhabitedConsumerNode","className":"Inhabited"},{"typeNames":["Lean.Meta.SynthInstance.MkTableKey.M"],"name":"Lean.Meta.SynthInstance.MkTableKey.instMonadMCtxM","className":"Lean.MonadMCtx"},{"typeNames":["Lean.Meta.SynthInstance.Answer"],"name":"Lean.Meta.SynthInstance.instInhabitedAnswer","className":"Inhabited"},{"typeNames":["Lean.Meta.SynthInstance.SynthM"],"name":"Lean.Meta.SynthInstance.instInhabitedSynthM","className":"Inhabited"}],"imports":["Init","Lean.Meta.Basic","Lean.Meta.Instances","Lean.Meta.AbstractMVars","Lean.Meta.WHNF","Lean.Meta.Check","Lean.Util.Profile"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L752-L759","name":"Lean.Meta.synthInstance","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.synthInstance","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L747-L750","name":"Lean.Meta.trySynthInstance","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.trySynthInstance","doc":"Return `LOption.some r` if succeeded, `LOption.none` if it failed, and `LOption.undef` if\ninstance cannot be synthesized right now because `type` contains metavariables. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L685-L693","name":"Lean.Meta.synthInstance?.assignOutParams","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.synthInstance?.assignOutParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L667-L742","name":"Lean.Meta.synthInstance?","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.synthInstance?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L582-L595","name":"Lean.Meta.SynthInstance.main","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.main","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L574-L580","name":"Lean.Meta.SynthInstance.synth","kind":"opaque","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.synth","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L571-L572","name":"Lean.Meta.SynthInstance.getResult","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.getResult","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L559-L569","name":"Lean.Meta.SynthInstance.step","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.step","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L542-L557","name":"Lean.Meta.SynthInstance.resume","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.resume","doc":"Given `(cNode, answer)` on the top of the resume stack, continue execution by using `answer` to solve the\nnext subgoal. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L534-L537","name":"Lean.Meta.SynthInstance.getNextToResume","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.getNextToResume","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L515-L532","name":"Lean.Meta.SynthInstance.generate","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.generate","doc":"Try the next instance in the node on the top of the generator stack. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L511-L512","name":"Lean.Meta.SynthInstance.modifyTop","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.modifyTop","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L508-L509","name":"Lean.Meta.SynthInstance.getTop","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.getTop","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L459-L506","name":"Lean.Meta.SynthInstance.consume","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.consume","doc":"Process the next subgoal in the given consumer node. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L390-L404","name":"Lean.Meta.SynthInstance.addAnswer","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.addAnswer","doc":"Create a new answer after `cNode` resolved all subgoals.\nThat is, `cNode.subgoals == []`.\nAnd then, store it in the tabled entries map, and wakeup waiters. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L372-L376","name":"Lean.Meta.SynthInstance.isNewAnswer","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.isNewAnswer","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L358-L370","name":"Lean.Meta.SynthInstance.wakeUp","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.wakeUp","doc":"Move waiters that are waiting for the given answer to the resume stack. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L349-L355","name":"Lean.Meta.SynthInstance.tryAnswer","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.tryAnswer","doc":"Assign a precomputed answer to `mvar`.\nIf it succeeds, the result is a new updated metavariable context and a new list of subgoals. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L332-L344","name":"Lean.Meta.SynthInstance.tryResolve","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.tryResolve","doc":"Try to synthesize metavariable `mvar` using the instance `inst`.\nRemark: `mctx` is set using `withMCtx`.\nIf it succeeds, the result is a new updated metavariable context and a new list of subgoals.\nA subgoal is created for each instance implicit parameter of `inst`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L303-L325","name":"Lean.Meta.SynthInstance.getSubgoals","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.getSubgoals","doc":"`getSubgoals lctx localInsts xs inst` creates the subgoals for the instance `inst`.\nThe subgoals are in the context of the free variables `xs`, and\n`(lctx, localInsts)` is the local context and instances before we added the free variables to it.\n\nThis extra complication is required because\n  1- We want all metavariables created by `synthInstance` to share the same local context.\n  2- We want to ensure that applications such as `mvar xs` are higher order patterns.\n\nThe method `getGoals` create a new metavariable for each parameter of `inst`.\nFor example, suppose the type of `inst` is `forall (x_1 : A_1) ... (x_n : A_n), B x_1 ... x_n`.\nThen, we create the metavariables `?m_i : forall xs, A_i`, and return the subset of these\nmetavariables that are instance implicit arguments, and the expressions:\n  - `inst (?m_1 xs) ... (?m_n xs)` (aka `instVal`)\n  - `B (?m_1 xs) ... (?m_n xs)` "},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L286-L286","name":"Lean.Meta.SynthInstance.SubgoalsResult.instTypeBody","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.SubgoalsResult.instTypeBody","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L285-L285","name":"Lean.Meta.SynthInstance.SubgoalsResult.instVal","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.SubgoalsResult.instVal","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L284-L284","name":"Lean.Meta.SynthInstance.SubgoalsResult.subgoals","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.SubgoalsResult.subgoals","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L283-L286","name":"Lean.Meta.SynthInstance.SubgoalsResult","kind":"structure","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.SubgoalsResult","doc":"See `getSubgoals` and `getSubgoalsAux`\n\nWe use the parameter `j` to reduce the number of `instantiate*` invocations.\nIt is the same approach we use at `forallTelescope` and `lambdaTelescope`.\nGiven `getSubgoalsAux args j subgoals instVal type`,\nwe have that `type.instantiateRevRange j args.size args` does not have loose bound variables. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L271-L275","name":"Lean.Meta.SynthInstance.mkTableKeyFor","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.mkTableKeyFor","doc":"Create a `key` for the goal associated with the given metavariable.\nThat is, we create a key for the type of the metavariable.\n\nWe must instantiate assigned metavariables before we invoke `mkTableKey`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L261-L264","name":"Lean.Meta.SynthInstance.getEntry","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.getEntry","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L258-L259","name":"Lean.Meta.SynthInstance.findEntry?","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.findEntry?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L246-L256","name":"Lean.Meta.SynthInstance.newSubgoal","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.newSubgoal","doc":"Create a new generator node for `mvar` and add `waiter` as its waiter.\n`key` must be `mkTableKey mctx mvarType`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L230-L241","name":"Lean.Meta.SynthInstance.mkGeneratorNode?","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.mkGeneratorNode?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L193-L228","name":"Lean.Meta.SynthInstance.getInstances","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.getInstances","doc":"Return globals and locals instances that may unify with `type` "},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L189-L190","name":"Lean.Meta.SynthInstance.instInhabitedSynthM","kind":"instance","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.instInhabitedSynthM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L186-L187","name":"Lean.Meta.SynthInstance.mapMetaM","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.mapMetaM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L183-L184","name":"Lean.Meta.SynthInstance.checkMaxHeartbeats","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.checkMaxHeartbeats","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L181-L181","name":"Lean.Meta.SynthInstance.SynthM","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.SynthM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L179-L179","name":"Lean.Meta.SynthInstance.State.tableEntries","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.State.tableEntries","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L178-L178","name":"Lean.Meta.SynthInstance.State.resumeStack","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.State.resumeStack","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L177-L177","name":"Lean.Meta.SynthInstance.State.generatorStack","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.State.generatorStack","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L176-L176","name":"Lean.Meta.SynthInstance.State.result?","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.State.result?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L175-L179","name":"Lean.Meta.SynthInstance.State","kind":"structure","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.State","doc":"Remark: the SynthInstance.State is not really an extension of `Meta.State`.\nThe field `postponed` is not needed, and the field `mctx` is misleading since\n`synthInstance` methods operate over different `MetavarContext`s simultaneously.\nThat being said, we still use `extends` because it makes it simpler to move from\n`M` to `MetaM`.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L166-L166","name":"Lean.Meta.SynthInstance.Context.maxHeartbeats","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.Context.maxHeartbeats","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L165-L165","name":"Lean.Meta.SynthInstance.Context.maxResultSize","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.Context.maxResultSize","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L164-L166","name":"Lean.Meta.SynthInstance.Context","kind":"structure","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.Context","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L162-L162","name":"Lean.Meta.SynthInstance.TableEntry.answers","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.TableEntry.answers","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L161-L161","name":"Lean.Meta.SynthInstance.TableEntry.waiters","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.TableEntry.waiters","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L160-L162","name":"Lean.Meta.SynthInstance.TableEntry","kind":"structure","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.TableEntry","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L158-L158","name":"Lean.Meta.SynthInstance.instInhabitedAnswer","kind":"instance","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.instInhabitedAnswer","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L157-L157","name":"Lean.Meta.SynthInstance.Answer.size","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.Answer.size","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L156-L156","name":"Lean.Meta.SynthInstance.Answer.resultType","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.Answer.resultType","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L155-L155","name":"Lean.Meta.SynthInstance.Answer.result","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.Answer.result","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L154-L158","name":"Lean.Meta.SynthInstance.Answer","kind":"structure","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.Answer","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L149-L152","name":"Lean.Meta.SynthInstance.mkTableKey","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.mkTableKey","doc":"Remark: `mkTableKey` assumes `e` does not contain assigned metavariables. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L121-L144","name":"Lean.Meta.SynthInstance.MkTableKey.normExpr","kind":"opaque","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.MkTableKey.normExpr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L101-L119","name":"Lean.Meta.SynthInstance.MkTableKey.normLevel","kind":"opaque","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.MkTableKey.normLevel","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L97-L99","name":"Lean.Meta.SynthInstance.MkTableKey.instMonadMCtxM","kind":"instance","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.MkTableKey.instMonadMCtxM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L94-L94","name":"Lean.Meta.SynthInstance.MkTableKey.M","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.MkTableKey.M","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L92-L92","name":"Lean.Meta.SynthInstance.MkTableKey.State.mctx","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.MkTableKey.State.mctx","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L91-L91","name":"Lean.Meta.SynthInstance.MkTableKey.State.emap","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.MkTableKey.State.emap","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L90-L90","name":"Lean.Meta.SynthInstance.MkTableKey.State.lmap","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.MkTableKey.State.lmap","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L89-L89","name":"Lean.Meta.SynthInstance.MkTableKey.State.nextIdx","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.MkTableKey.State.nextIdx","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L88-L92","name":"Lean.Meta.SynthInstance.MkTableKey.State","kind":"structure","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.MkTableKey.State","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L62-L64","name":"Lean.Meta.SynthInstance.Waiter.isRoot","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.Waiter.isRoot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L60-L60","name":"Lean.Meta.SynthInstance.Waiter.root","kind":"ctor","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.Waiter.root","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L59-L59","name":"Lean.Meta.SynthInstance.Waiter.consumerNode","kind":"ctor","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.Waiter.consumerNode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L58-L60","name":"Lean.Meta.SynthInstance.Waiter","kind":"inductive","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.Waiter","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L56-L56","name":"Lean.Meta.SynthInstance.instInhabitedConsumerNode","kind":"instance","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.instInhabitedConsumerNode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L55-L55","name":"Lean.Meta.SynthInstance.ConsumerNode.size","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.ConsumerNode.size","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L54-L54","name":"Lean.Meta.SynthInstance.ConsumerNode.subgoals","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.ConsumerNode.subgoals","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L53-L53","name":"Lean.Meta.SynthInstance.ConsumerNode.mctx","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.ConsumerNode.mctx","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L52-L52","name":"Lean.Meta.SynthInstance.ConsumerNode.key","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.ConsumerNode.key","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L51-L51","name":"Lean.Meta.SynthInstance.ConsumerNode.mvar","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.ConsumerNode.mvar","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L50-L56","name":"Lean.Meta.SynthInstance.ConsumerNode","kind":"structure","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.ConsumerNode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L48-L48","name":"Lean.Meta.SynthInstance.instInhabitedGeneratorNode","kind":"instance","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.instInhabitedGeneratorNode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L47-L47","name":"Lean.Meta.SynthInstance.GeneratorNode.currInstanceIdx","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.GeneratorNode.currInstanceIdx","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L46-L46","name":"Lean.Meta.SynthInstance.GeneratorNode.instances","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.GeneratorNode.instances","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L45-L45","name":"Lean.Meta.SynthInstance.GeneratorNode.mctx","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.GeneratorNode.mctx","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L44-L44","name":"Lean.Meta.SynthInstance.GeneratorNode.key","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.GeneratorNode.key","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L43-L43","name":"Lean.Meta.SynthInstance.GeneratorNode.mvar","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.GeneratorNode.mvar","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L42-L48","name":"Lean.Meta.SynthInstance.GeneratorNode","kind":"structure","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.GeneratorNode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L40-L40","name":"Lean.Meta.SynthInstance.instInhabitedInstance","kind":"instance","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.instInhabitedInstance","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L39-L39","name":"Lean.Meta.SynthInstance.Instance.synthOrder","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.Instance.synthOrder","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L38-L38","name":"Lean.Meta.SynthInstance.Instance.val","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.Instance.val","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L37-L40","name":"Lean.Meta.SynthInstance.Instance","kind":"structure","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.Instance","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L34-L35","name":"Lean.Meta.SynthInstance.getMaxHeartbeats","kind":"def","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.getMaxHeartbeats","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L27-L30","name":"Lean.Meta.synthInstance.etaExperiment","kind":"opaque","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.synthInstance.etaExperiment","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L22-L25","name":"Lean.Meta.synthInstance.maxSize","kind":"opaque","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.synthInstance.maxSize","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L17-L20","name":"Lean.Meta.synthInstance.maxHeartbeats","kind":"opaque","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.synthInstance.maxHeartbeats","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L1-L1","name":"Lean.Meta.SynthInstance.Context.mk","kind":"ctor","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.Context.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L1-L1","name":"Lean.Meta.SynthInstance.GeneratorNode.mk","kind":"ctor","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.GeneratorNode.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L1-L1","name":"Lean.Meta.SynthInstance.State.mk","kind":"ctor","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.State.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L1-L1","name":"Lean.Meta.SynthInstance.ConsumerNode.mk","kind":"ctor","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.ConsumerNode.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L1-L1","name":"Lean.Meta.SynthInstance.TableEntry.mk","kind":"ctor","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.TableEntry.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L1-L1","name":"Lean.Meta.SynthInstance.Answer.mk","kind":"ctor","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.Answer.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L1-L1","name":"Lean.Meta.SynthInstance.SubgoalsResult.mk","kind":"ctor","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.SubgoalsResult.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L1-L1","name":"Lean.Meta.SynthInstance.Instance.mk","kind":"ctor","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.Instance.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/f9da1d8b55ca6989297fb952985b7d8d6c77e14b/src/Lean/Meta/SynthInstance.lean#L1-L1","name":"Lean.Meta.SynthInstance.MkTableKey.State.mk","kind":"ctor","docLink":"./Lean/Meta/SynthInstance.html#Lean.Meta.SynthInstance.MkTableKey.State.mk","doc":""}]}